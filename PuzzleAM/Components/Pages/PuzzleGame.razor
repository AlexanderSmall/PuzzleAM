@page "/puzzlegame/{roomCode}"
@rendermode InteractiveServer

<PageTitle>Puzzle Game</PageTitle>

<div class="settings-wrapper mb-3">
    <div class="settings-panel @(settingsVisible ? "open" : "closed") d-flex flex-wrap justify-content-center align-items-center gap-2">
        <img src="/lib/heroicons/puzzle-piece.svg" class="puzzle-icon" alt="Puzzle icon" />
        <select @bind="selectedPieces" class="form-select w-auto">
            @foreach (var option in PieceOptions)
            {
                <option value="@option">@option</option>
            }
        </select>

        <InputFile id="imageLoader" OnChange="OnInputFileChange" class="d-none" />
        <label for="imageLoader" class="btn btn-primary load-icon" title="Load Image">
            <img src="/lib/heroicons/image.svg" alt="Load image icon" />
        </label>

        <select @bind="selectedBackground" @bind:after="OnBackgroundChange" class="form-select color-select" style="background-color:@selectedBackground;">
            <option value="#EFECE6" style="background-color:#EFECE6;" selected></option>
            <option value="#E7F1DC" style="background-color:#E7F1DC;"></option>
            <option value="#C8D2C5" style="background-color:#C8D2C5;"></option>
        </select>

        @if (!string.IsNullOrEmpty(RoomCode))
        {
            <button class="btn btn-outline-secondary copy-icon" @onclick="CopyRoomCode" title="Copy room code">
                <img src="/lib/heroicons/clipboard.svg" alt="Copy room code" />
            </button>
            <button class="btn btn-danger leave-icon" @onclick="LeaveRoom" title="Leave Room">
                <img src="/lib/heroicons/arrow-left-on-rectangle.svg" alt="Leave room" />
            </button>
        }
    </div>
    <Tab Class="settings-tab" IsOpen="settingsVisible" OnToggle="ToggleSettings" Vertical="true" />
    <div class="timer-display">Time: @elapsed.ToString(@"hh\:mm\:ss")</div>
</div>


<div id="puzzleContainer"></div>

<div class="user-wrapper">
    <div class="user-panel @(userListVisible ? "open" : "closed")">
        @if (!string.IsNullOrEmpty(RoomCode))
        {
            <div class="room-code">Room Code: @RoomCode</div>
        }
        <h5>Users</h5>
        <ul>
            @foreach (var u in users)
            {
                <li>@u</li>
            }
        </ul>
    </div>
    <Tab Class="user-tab" IsOpen="userListVisible" OnToggle="ToggleUserList" Vertical="true" />
</div>
